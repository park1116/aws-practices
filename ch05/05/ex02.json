{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a RDS Instance of MySQL Engine",
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": "true"
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "VPCSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "VPC Security Group",
                "GroupName": "VPCSecurityGroup",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "Subnet02": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.2.0/24"
            }
        },
        "RouteTable02": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "NetworkAcl02": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "Subnet02RouteTable02Association": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Subnet02"
                },
                "RouteTableId": {
                    "Ref": "RouteTable02"
                }
            }
        },
        "Subnet02NetworkAcl02Association": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Subnet02"
                },
                "NetworkAclId": {
                    "Ref": "NetworkAcl02"
                }
            }
        },
        "NetworkAcl02Entry01": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl02"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "PortRange": {
                    "From": "3306",
                    "To": "3306"
                },
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "10.0.1.0/24"
            }
        },
        "NetworkAcl02Entry02": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl02"
                },
                "RuleNumber": "200",
                "Protocol": "6",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                },
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "10.0.1.0/24"
            }
        },
        "Subnet03": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.3.0/24"
            }
        },
        "RouteTable03": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "NetworkAcl03": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "Subnet03RouteTable03Association": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Subnet03"
                },
                "RouteTableId": {
                    "Ref": "RouteTable03"
                }
            }
        },
        "Subnet03NetworkAcl03Association": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "Subnet03"
                },
                "NetworkAclId": {
                    "Ref": "NetworkAcl03"
                }
            }
        },
        "NetworkAcl03Entry01": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl03"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "PortRange": {
                    "From": "3306",
                    "To": "3306"
                },
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "10.0.1.0/24"
            }
        },
        "NetworkAcl03Entry02": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAcl03"
                },
                "RuleNumber": "200",
                "Protocol": "6",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                },
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "10.0.1.0/24"
            }
        },
        "DBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "Subnets available for the RDS DB Instance",
                "SubnetIds": [
                    {
                        "Ref": "Subnet02"
                    },
                    {
                        "Ref": "Subnet03"
                    }
                ]
            }
        },
        "Database": {
            "Type": "AWS::RDS::DBInstance",
            "DeletionPolicy": "Delete",
            "Properties": {
                "AllocatedStorage": "5",
                "DBInstanceClass": "db.t2.micro",
                "Engine": "MySQL",
                "DBName": "myapp",
                "MasterUsername": "myapp",
                "MasterUserPassword": "myapp12345",
                "DBSubnetGroupName": {
                    "Ref": "DBSubnetGroup"
                },
                "VPCSecurityGroups": [
                    {
                        "Ref": "VPCSecurityGroup"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Endpoint": {
            "Description": "the Endpoint of RDS instance created",
            "Value": {
                "Fn::GetAtt": [
                    "Database",
                    "Endpoint.Address"
                ]
            }
        }
    }
}